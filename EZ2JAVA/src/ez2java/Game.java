//컨트롤패널
package ez2java;

import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.RenderingHints;
import java.util.ArrayList;

import javax.swing.ImageIcon;

public class Game extends Thread{

	private int score = 0, combo = 0 , maxcombo = 0;
	private Image blueNoteRouteImage = new ImageIcon(Main.class.getResource("../images/blueroutelineimage.png")).getImage();
	private Image yellowNoteRouteImage = new ImageIcon(Main.class.getResource("../images/redroutelineimage.png")).getImage();

	private Image noteRouteSImage; // = new ImageIcon(Main.class.getResource("../images/redroutelineimage.png")).getImage();
	private Image noteRouteDImage; // = new ImageIcon(Main.class.getResource("../images/blueroutelineimage.png")).getImage();
	private Image noteRouteFImage; // = new ImageIcon(Main.class.getResource("../images/redroutelineimage.png")).getImage();
	private Image noteRouteSpaceImage; // = new ImageIcon(Main.class.getResource("../images/blueroutelineimage.png")).getImage();
	private Image noteRouteJImage; // = new ImageIcon(Main.class.getResource("../images/redroutelineimage.png")).getImage();
	private Image noteRouteKImage; // = new ImageIcon(Main.class.getResource("../images/blueroutelineimage.png")).getImage();
	private Image noteRouteLImage; // = new ImageIcon(Main.class.getResource("../images/redroutelineimage.png")).getImage();
	private Image blueFlareImage; // = new ImageIcon(Main.class.getResource("../images/blueflare.png")).getImage();
	private Image judgeImage; // = new ImageIcon(Main.class.getResource("../images/GOOD.png")).getImage();
	private String titleName;
	private String musicTitle;
	private Music gameMusic;

	ArrayList<Note> noteList = new ArrayList<Note>();

	public Game(String titleName, String musicTitle) {
		this.titleName = titleName;
		this.musicTitle = musicTitle;
		gameMusic = new Music(this.musicTitle, false);
		gameMusic.start();
	}

	public void screenDraw(Graphics2D g) {
		//판정 x축 매칭 108 , y축 매칭 515 
		//x간 간격 ( 108, 168, 228, 288, 350, 414, 475 )


		g.drawImage(noteRouteSImage, 108, 96, null);
		g.drawImage(noteRouteDImage, 169, 96, null);
		g.drawImage(noteRouteFImage, 229, 96, null);
		g.drawImage(noteRouteSpaceImage, 289, 96, null);
		g.drawImage(noteRouteJImage, 351, 96, null);
		g.drawImage(noteRouteKImage, 412, 96, null);
		g.drawImage(noteRouteLImage, 474, 96, null);

		for(int i = 0; i < noteList.size() ; i++) {
			Note note = noteList.get(i);

			if(note.getY() > 620) {
				if(combo > maxcombo) maxcombo = combo;
				combo = 0;
				judgeImage = new ImageIcon(Main.class.getResource("../images/MISS.png")).getImage();
			}
			if(!note.isProceeded()) {
				noteList.remove(i);
				i--;
			}
			else note.screenDraw(g);
		}


		g.setColor(Color.white);
		g.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING, RenderingHints.VALUE_TEXT_ANTIALIAS_ON); //글씨 깨짐 방지, 안티에일리어싱
		g.setFont(new Font("Arial", Font.BOLD, 20));
		g.drawString(score + "", 120, 700); // SCORE 계기판

		if(maxcombo == 0 || combo > maxcombo) g.drawString(combo + "", 120, 645); // COMBO 계기판
		else g.drawString(maxcombo + "", 120, 645); // COMBO 계기판

		g.setFont(new Font("Arial", Font.BOLD, 40));

		if(combo != 0)
			g.drawString(combo + " COMBO", 230, 170);

		g.setFont(new Font("Arial", Font.BOLD, 50));
		g.drawImage(blueFlareImage, -160, 100, null);
		g.drawImage(judgeImage,209, 295, null);
	}


	public void pressS() {
		noteRouteSImage = new ImageIcon(Main.class.getResource("../images/redroutelineimage.png")).getImage();
		judge("S");
	}
	public void pressD() {
		noteRouteDImage = new ImageIcon(Main.class.getResource("../images/blueroutelineimage.png")).getImage();
		judge("D");
	}
	public void pressF() {
		noteRouteFImage = new ImageIcon(Main.class.getResource("../images/redroutelineimage.png")).getImage();
		judge("F");
	}
	public void pressSpace() {
		noteRouteSpaceImage = new ImageIcon(Main.class.getResource("../images/blueroutelineimage.png")).getImage();
		judge("Space");
	}
	public void pressJ() {
		noteRouteJImage = new ImageIcon(Main.class.getResource("../images/redroutelineimage.png")).getImage();
		judge("J");
	}
	public void pressK() {
		noteRouteKImage = new ImageIcon(Main.class.getResource("../images/blueroutelineimage.png")).getImage();
		judge("K");
	}
	public void pressL() {
		noteRouteLImage = new ImageIcon(Main.class.getResource("../images/redroutelineimage.png")).getImage();
		judge("L");
	}


	public void releaseS() {
		noteRouteSImage = null;
	}
	public void releaseD() {
		noteRouteDImage = null;
	}
	public void releaseF() {
		noteRouteFImage = null;
	}
	public void releaseSpace() {
		noteRouteSpaceImage = null;
	}
	public void releaseJ() {
		noteRouteJImage = null;
	}
	public void releaseK() {
		noteRouteKImage = null;
	}
	public void releaseL() {
		noteRouteLImage = null;
	}

	@Override
	public void run() {
		dropNotes();
	}


	public Music getGameMusic() {
		return gameMusic;
	}

	public void dropNotes() {
		Beat[] beats = null;
		if(titleName.equals("Say that you")) {
			beats = new Beat[] {
					new Beat(3640, "Space"),
					new Beat(5200, "Space"),
					new Beat(6890, "Space"),
					new Beat(7560, "Space"),
					new Beat(8260, "Space"),
					new Beat(10180, "Space"),
					new Beat(11840, "Space"),
					new Beat(13460, "S"),
					new Beat(13940, "D"),
					new Beat(14360, "F"),
					new Beat(15190, "J"),
					new Beat(15520, "K"),
					new Beat(15890, "L"),
					new Beat(16780, "S"),
					new Beat(17140, "D"),
					new Beat(17590, "F"),
					new Beat(18520, "J"),
					new Beat(18850, "K"),
					new Beat(19260, "L"),
					new Beat(20050, "S"),
					new Beat(20500, "F"),
					new Beat(20940, "J"),
					new Beat(21340, "L"),
					new Beat(21760, "D"),
					new Beat(22170, "K"),
					new Beat(22600, "Space"),
					new Beat(23070, "Space"),
					new Beat(23400, "S"),
					new Beat(23740, "J"),
					new Beat(24170, "D"),
					new Beat(24580, "J"),
					new Beat(25020, "F"),
					new Beat(25410, "K"),
					new Beat(26020, "Space"),
					new Beat(26180, "Space"),
					new Beat(26550, "S"),
					new Beat(26990, "L"),
					new Beat(27460, "D"),
					new Beat(27890, "K"),
					new Beat(28330, "F"),
					new Beat(29290, "Space"),
					new Beat(29480, "Space"),
					new Beat(29860, "S"),
					new Beat(30200, "K"),
					new Beat(30520, "D"),
					new Beat(30740, "F"),
					new Beat(31060, "L"),
					new Beat(31350, "D"),
					new Beat(31580, "Space"),
					new Beat(31970, "S"),
					new Beat(32360, "D"),
					new Beat(32790, "F"),
					new Beat(33000, "F"),
					new Beat(33050, "D"),
					new Beat(33450, "F"),
					new Beat(33810, "D"),
					new Beat(34390, "S"),
					new Beat(34820, "D"),
					new Beat(35230, "F"),
					new Beat(35620, "Space"),
					new Beat(36030, "J"),
					new Beat(36290, "K"),
					new Beat(36680, "L"),
					new Beat(37060, "K"),
					new Beat(37480, "Space"),
					new Beat(38130, "S"),
					new Beat(38530, "D"),
					new Beat(38920, "F"),
					new Beat(39270, "Space"),
					new Beat(39500, "J"),
					new Beat(39650, "K"),
					new Beat(40110, "S"),
					new Beat(40500, "Space"),
					new Beat(40800, "S"),
					new Beat(40960, "Space"),
					new Beat(41380, "K"),
					new Beat(41750, "D"),
					new Beat(42190, "L"),
					new Beat(42510, "F"),
					new Beat(42740, "K"),
					new Beat(42960, "D"),
					new Beat(43280, "S"),
					new Beat(43580, "D"),
					new Beat(43850, "D"),
					new Beat(43960, "F"),
					new Beat(44090, "D"),
					new Beat(44190, "F"),
					new Beat(44310, "D"),
					new Beat(44410, "F"),
					new Beat(44490, "D"),
					new Beat(44570, "F"),
					new Beat(44790, "F"),
					new Beat(45060, "Space"),
					new Beat(45310, "J"),
					new Beat(45690, "K"),
					new Beat(45920, "L"),
					new Beat(46330, "K"),
					new Beat(46740, "J"),
					new Beat(46940, "Space"),
					new Beat(47370, "J"),
					new Beat(47610, "Space"),
					new Beat(47810, "K"),
					new Beat(47990, "L"),
					new Beat(48360, "Space"),
					new Beat(48600, "S"),
					new Beat(49000, "Space"),
					new Beat(49230, "D"),
					new Beat(49430, "F"),
					new Beat(49630, "K"),
					new Beat(50020, "Space"),
					new Beat(50450, "K"),
					new Beat(50490, "D"),
					new Beat(50770, "Space"),
					new Beat(51040, "F"),
					new Beat(51080, "J"),
					new Beat(51570, "Space"),
					new Beat(52020, "K"),
					new Beat(52060, "D"),
					new Beat(52430, "D"),
					new Beat(52460, "K"),
					new Beat(52840, "Space"),
					new Beat(52960, "F"),
					new Beat(53460, "F"),
					new Beat(53500, "F"),
					new Beat(53530, "F"),
					new Beat(53700, "D"),
					new Beat(54090, "S"),
					new Beat(54510, "D"),
					new Beat(56230, "J"),
					new Beat(57020, "S"),
					new Beat(57410, "D"),
					new Beat(57830, "F"),
					new Beat(58570, "D"),
					new Beat(59450, "Space"),
					new Beat(60290, "L"),
					new Beat(60720, "S"),
					new Beat(61120, "D"),
					new Beat(61320, "K"),
					new Beat(61560, "F"),
					new Beat(61810, "D"),
					new Beat(62180, "S"),
					new Beat(62660, "K"),
					new Beat(63620, "Space"),
					new Beat(64410, "Space"),
					new Beat(66050, "S"),
					new Beat(66930, "F"),
					new Beat(67710, "J"),
					new Beat(68590, "L"),
					new Beat(69340, "D"),
					new Beat(70140, "K"),
					new Beat(71050, "Space"),
					new Beat(71410, "Space"),
					new Beat(71840, "J"),
					new Beat(72270, "S"),
					new Beat(72720, "D"),
					new Beat(72720, "K"),
					new Beat(74230, "L"),
					new Beat(74270, "F"),
					new Beat(75890, "S"),
					new Beat(75890, "J"),
					new Beat(77560, "Space"),
					new Beat(78020, "Space"),
					new Beat(78470, "Space"),
					new Beat(78830, "Space"),
					new Beat(80060, "D"),
					new Beat(80060, "K"),
					new Beat(80860, "J"),
					new Beat(80890, "F"),
					new Beat(82470, "L"),
					new Beat(82500, "S"),
					new Beat(82900, "K"),
					new Beat(82930, "D"),
					new Beat(83350, "F"),
					new Beat(83380, "J"),
					new Beat(83710, "Space"),
					new Beat(84150, "D"),
					new Beat(84150, "K"),
					new Beat(84520, "S"),
					new Beat(84520, "L"),
					new Beat(84870, "D"),
					new Beat(84870, "K"),
					new Beat(85280, "F"),
					new Beat(85280, "J"),
					new Beat(85740, "Space"),
					new Beat(86180, "Space"),
					new Beat(86600, "S"),
					new Beat(86810, "K"),
					new Beat(87000, "D"),
					new Beat(87160, "J"),
					new Beat(87350, "F"),
					new Beat(87510, "L"),
					new Beat(87810, "D"),
					new Beat(88050, "K"),
					new Beat(88370, "Space"),
					new Beat(88580, "Space"),
					new Beat(88780, "S"),
					new Beat(88960, "L"),
					new Beat(89160, "K"),
					new Beat(89420, "D"),
					new Beat(89570, "J"),
					new Beat(89760, "F"),
					new Beat(89940, "K"),
					new Beat(90130, "D"),
					new Beat(90300, "S"),
					new Beat(90470, "L"),
					new Beat(90770, "Space"),
					new Beat(91250, "K"),
					new Beat(91400, "D"),
					new Beat(91550, "J"),
					new Beat(91660, "F"),
					new Beat(92200, "Space"),
					new Beat(93130, "F"),
					new Beat(93160, "J"),
					new Beat(94000, "D"),
					new Beat(94050, "K"),
					new Beat(94380, "S"),
					new Beat(94380, "L"),
					new Beat(94670, "K"),
					new Beat(94700, "D"),
					new Beat(95040, "F"),
					new Beat(95070, "J"),
					new Beat(95620, "Space"),
					new Beat(96460, "Space"),
					new Beat(97390, "F"),
					new Beat(97490, "J"),
					new Beat(97670, "D"),
					new Beat(97890, "K"),
					new Beat(98040, "S"),
					new Beat(98150, "L"),
					new Beat(98390, "D"),
					new Beat(98510, "K"),
					new Beat(98900, "Space"),
					new Beat(99370, "J"),
					new Beat(99540, "F"),
					new Beat(99720, "K"),
					new Beat(99840, "D"),
					new Beat(100250, "S"),
					new Beat(100440, "L"),
					new Beat(100590, "D"),
					new Beat(101010, "Space"),
					new Beat(101160, "K"),
					new Beat(102280, "J"),
			};
		}
			
			else if(titleName.equals("White moon")) {
				beats = new Beat[] {
						new Beat(3250, "S"),
						new Beat(3360, "D"),
						new Beat(3620, "J"),
						new Beat(3770, "K"),
						new Beat(4080, "S"),
						new Beat(4250, "D"),
						new Beat(4490, "J"),
						new Beat(4550, "K"),
						new Beat(4830, "D"),
						new Beat(4950, "F"),
						new Beat(5140, "K"),
						new Beat(5330, "L"),
						new Beat(5590, "D"),
						new Beat(5730, "F"),
						new Beat(5940, "K"),
						new Beat(6130, "L"),
						new Beat(6370, "D"),
						new Beat(6520, "F"),
						new Beat(6750, "K"),
						new Beat(6980, "L"),
						new Beat(7180, "D"),
						new Beat(7400, "F"),
						new Beat(7630, "K"),
						new Beat(7780, "L"),
						new Beat(8040, "Space"),
						new Beat(8450, "Space"),
						new Beat(8770, "S"),
						new Beat(9000, "D"),
						new Beat(9200, "K"),
						new Beat(9310, "L"),
						new Beat(9670, "S"),
						new Beat(9850, "D"),
						new Beat(10050, "K"),
						new Beat(10200, "L"),
						new Beat(10480, "S"),
						new Beat(10630, "D"),
						new Beat(10860, "K"),
						new Beat(11010, "L"),
						new Beat(11280, "Space"),
						new Beat(11600, "Space"),
						new Beat(12000, "D"),
						new Beat(12110, "F"),
						new Beat(12380, "J"),
						new Beat(12540, "K"),
						new Beat(12860, "D"),
						new Beat(13010, "F"),
						new Beat(13250, "J"),
						new Beat(13390, "K"),
						new Beat(13620, "D"),
						new Beat(13760, "F"),
						new Beat(14000, "J"),
						new Beat(14150, "K"),
						new Beat(14400, "S"),
						new Beat(14920, "Space"),
						new Beat(15450, "Space"),
						new Beat(15450, "L"),
						new Beat(15820, "D"),
						new Beat(16320, "D"),
						new Beat(16350, "D"),
						new Beat(16370, "K"),
						new Beat(16810, "F"),
						new Beat(17200, "J"),
						new Beat(17670, "S"),
						new Beat(17940, "L"),
						new Beat(18360, "D"),
						new Beat(18670, "K"),
						new Beat(19010, "F"),
						new Beat(19500, "J"),
						new Beat(19670, "J"),
						new Beat(19870, "F"),
						new Beat(20060, "K"),
						new Beat(20270, "D"),
						new Beat(20460, "J"),
						new Beat(20690, "S"),
						new Beat(20900, "K"),
						new Beat(21290, "D"),
						new Beat(21630, "Space"),
						new Beat(21990, "J"),
						new Beat(22480, "F"),
						new Beat(22680, "K"),
						new Beat(22830, "D"),
						new Beat(23320, "Space"),
						new Beat(23670, "F"),
						new Beat(23990, "J"),
						new Beat(24410, "D"),
						new Beat(24850, "Space"),
						new Beat(25240, "F"),
						new Beat(25620, "L"),
						new Beat(25780, "S"),
						new Beat(25970, "K"),
						new Beat(26470, "Space"),
						new Beat(26830, "D"),
						new Beat(27210, "J"),
						new Beat(27670, "F"),
						new Beat(28210, "L"),
						new Beat(28790, "S"),
						new Beat(29210, "K"),
						new Beat(29380, "K"),
						new Beat(29720, "D"),
						new Beat(29880, "D"),
						new Beat(30190, "J"),
						new Beat(30370, "J"),
						new Beat(30620, "F"),
						new Beat(30740, "F"),
						new Beat(32000, "Space"),
						new Beat(32300, "Space"),
						new Beat(32600, "Space"),
						new Beat(32820, "S"),
						new Beat(33090, "K"),
						new Beat(33320, "D"),
						new Beat(33650, "J"),
						new Beat(33760, "F"),
						new Beat(33870, "J"),
						new Beat(34040, "F"),
						new Beat(34150, "J"),
						new Beat(34440, "D"),
						new Beat(34560, "K"),
						new Beat(34670, "D"),
						new Beat(34780, "K"),
						new Beat(34900, "D"),
						new Beat(35250, "L"),
						new Beat(35400, "S"),
						new Beat(35500, "L"),
						new Beat(35660, "S"),
						new Beat(35740, "L"),
						new Beat(35940, "D"),
						new Beat(36260, "K"),
						new Beat(36480, "F"),
						new Beat(36590, "J"),
						new Beat(36880, "Space"),
						new Beat(37210, "Space"),
						new Beat(37670, "Space"),
						new Beat(38090, "Space"),
						new Beat(38530, "J"),
						new Beat(38860, "J"),
						new Beat(39260, "J"),
						new Beat(39640, "J"),
						new Beat(40090, "J"),
						new Beat(40270, "D"),
						new Beat(40430, "K"),
						new Beat(40530, "S"),
						new Beat(40670, "K"),
						new Beat(40830, "D"),
						new Beat(41070, "K"),
						new Beat(41220, "F"),
						new Beat(41340, "J"),
						new Beat(41620, "Space"),
						new Beat(41790, "J"),
						new Beat(41940, "D"),
						new Beat(42070, "J"),
						new Beat(42240, "F"),
						new Beat(42350, "K"),
						new Beat(42460, "D"),
						new Beat(42590, "K"),
						new Beat(42740, "S"),
						new Beat(42860, "L"),
						new Beat(42970, "D"),
						new Beat(43080, "K"),
						new Beat(43190, "F"),
						new Beat(43300, "J"),
						new Beat(43420, "Space"),
						new Beat(43890, "Space"),
						new Beat(44360, "Space"),
						new Beat(44860, "J"),
						new Beat(45000, "F"),
						new Beat(45170, "K"),
						new Beat(45280, "D"),
						new Beat(45390, "L"),
						new Beat(45540, "S"),
						new Beat(45650, "K"),
						new Beat(45780, "D"),
						new Beat(45910, "J"),
						new Beat(46030, "F"),
						new Beat(46150, "J"),
						new Beat(46260, "Space"),
						new Beat(46420, "K"),
						new Beat(46900, "F"),
						new Beat(47000, "J"),
						new Beat(47180, "D"),
						new Beat(47280, "K"),
						new Beat(47480, "S"),
						new Beat(47590, "L"),
						new Beat(47740, "D"),
						new Beat(47840, "K"),
						new Beat(48010, "F"),
						new Beat(48090, "J"),
						new Beat(48320, "Space"),
						new Beat(48580, "F"),
						new Beat(48690, "J"),
						new Beat(48820, "D"),
						new Beat(48960, "K"),
						new Beat(49110, "F"),
						new Beat(49210, "J"),
						new Beat(49370, "D"),
						new Beat(49480, "K"),
						new Beat(49590, "F"),
						new Beat(49720, "J"),
						new Beat(49990, "S"),
						new Beat(50140, "L"),
						new Beat(50250, "S"),
						new Beat(50360, "L"),
						new Beat(50500, "D"),
						new Beat(50540, "K"),
						new Beat(50740, "J"),
						new Beat(50820, "F"),
						new Beat(51290, "Space"),
						new Beat(51620, "J"),
						new Beat(51740, "F"),
						new Beat(51820, "J"),
						new Beat(51960, "D"),
						new Beat(52080, "K"),
						new Beat(52200, "S"),
						new Beat(52270, "L"),
						new Beat(52370, "D"),
						new Beat(52440, "K"),
						new Beat(52850, "J"),
						new Beat(52850, "Space"),
						new Beat(52880, "F"),
						new Beat(53240, "K"),
						new Beat(53270, "D"),
						new Beat(53630, "Space"),
						new Beat(53670, "S"),
						new Beat(53670, "L"),
						new Beat(54050, "K"),
						new Beat(54120, "D"),
						new Beat(54530, "J"),
						new Beat(54640, "F"),
						new Beat(54790, "K"),
						new Beat(54930, "D"),
						new Beat(55050, "J"),
						new Beat(55160, "F"),
						new Beat(55240, "K"),
						new Beat(55380, "J"),
						new Beat(55450, "Space"),
						new Beat(55650, "J"),
						new Beat(55680, "Space"),
						new Beat(56080, "F"),
						new Beat(56500, "F"),
						new Beat(57710, "S"),
						new Beat(57860, "S"),
						new Beat(58000, "S"),
						new Beat(58130, "S"),
						new Beat(58250, "D"),
						new Beat(58400, "F"),
						new Beat(59190, "L"),
						new Beat(59350, "L"),
						new Beat(59510, "L"),
						new Beat(59620, "K"),
						new Beat(59740, "J"),
						new Beat(60040, "Space"),
						new Beat(60260, "Space"),
						new Beat(60400, "Space"),
						new Beat(60520, "Space"),
						new Beat(60880, "F"),
						new Beat(61040, "D"),
						new Beat(61260, "J"),
						new Beat(61410, "D"),
						new Beat(61680, "K"),
						new Beat(61830, "S"),
						new Beat(61940, "L"),
						new Beat(62050, "D"),
						new Beat(62170, "K"),
						new Beat(62450, "J"),
						new Beat(62830, "F"),
						new Beat(63570, "D"),
						new Beat(63930, "J"),
						new Beat(64300, "S"),
						new Beat(64690, "K"),
						new Beat(65170, "D"),
						new Beat(65400, "L"),
						new Beat(65640, "F"),
						new Beat(65920, "K"),
						new Beat(66040, "Space"),
						new Beat(66250, "K"),
						new Beat(66510, "S"),
						new Beat(66810, "D"),
						new Beat(67100, "F"),
						new Beat(67590, "Space"),
						new Beat(67750, "Space"),
						new Beat(68040, "Space"),
						new Beat(68250, "Space"),
						new Beat(68430, "Space"),
						new Beat(68730, "S"),
						new Beat(68960, "K"),
						new Beat(69160, "D"),
						new Beat(69270, "L"),
						new Beat(69420, "F"),
						new Beat(69530, "K"),
						new Beat(69610, "D"),
						new Beat(69810, "J"),
						new Beat(70050, "F"),
						new Beat(70470, "Space"),
						new Beat(70710, "Space"),
						new Beat(70900, "Space"),
						new Beat(71060, "Space"),
						new Beat(71240, "Space"),
						new Beat(71420, "Space"),
						new Beat(71610, "Space"),
						new Beat(71790, "Space"),
						new Beat(71980, "S"),
						new Beat(72140, "S"),
						new Beat(72320, "S"),
						new Beat(72490, "S"),
						new Beat(72660, "S"),
						new Beat(72850, "S"),
						new Beat(73020, "S"),
						new Beat(73190, "S"),
						new Beat(73360, "S"),
						new Beat(73620, "D"),
						new Beat(73660, "J"),
						new Beat(74040, "K"),
						new Beat(74080, "F"),
						new Beat(74450, "L"),
						new Beat(74960, "L"),
						new Beat(74990, "L"),
						new Beat(75260, "S"),
						new Beat(75300, "J"),
						new Beat(75810, "J"),
						new Beat(75850, "J"),
						new Beat(76010, "K"),
						new Beat(76050, "D"),
						new Beat(76560, "D"),
						new Beat(76590, "D"),
						new Beat(76850, "Space"),
						new Beat(76890, "L"),
						new Beat(77400, "L"),
						new Beat(77430, "L"),
						new Beat(77470, "L"),
						new Beat(77500, "L"),
						new Beat(77530, "L"),
						new Beat(77700, "S"),
						new Beat(77740, "L"),
						new Beat(77810, "Space"),
						new Beat(78070, "Space"),
						new Beat(78520, "D"),
						new Beat(78540, "K"),
						new Beat(79220, "F"),
						new Beat(79260, "J"),
						new Beat(79780, "J"),
						new Beat(80060, "J"),
						new Beat(80230, "J"),
						new Beat(80490, "D"),
						new Beat(80640, "F"),
						new Beat(80680, "K"),
						new Beat(80820, "D"),
						new Beat(80900, "S"),
						new Beat(81080, "D"),
						new Beat(81190, "F"),
						new Beat(81370, "J"),
						new Beat(81730, "J"),
						new Beat(81920, "J"),
						new Beat(82090, "D"),
						new Beat(82210, "F"),
						new Beat(82310, "D"),
						new Beat(82390, "F"),
						new Beat(82510, "F"),
						new Beat(82540, "J"),
						new Beat(82720, "K"),
						new Beat(82950, "Space"),
						new Beat(83100, "K"),
						new Beat(83260, "S"),
						new Beat(83610, "K"),
						new Beat(83720, "D"),
						new Beat(83840, "K"),
						new Beat(84010, "F"),
						new Beat(84120, "J"),
						new Beat(84340, "D"),
						new Beat(84500, "K"),
						new Beat(84620, "F"),
						new Beat(84730, "J"),
						new Beat(85070, "S"),
						new Beat(85220, "L"),
						new Beat(85410, "K"),
						new Beat(85550, "J"),
						new Beat(85730, "J"),
						new Beat(85840, "Space"),
						new Beat(86120, "L"),
						new Beat(86500, "J"),
						new Beat(86950, "L"),
						new Beat(87280, "J"),
						new Beat(87690, "L"),
						new Beat(88100, "J"),
						new Beat(88470, "L"),
						new Beat(88870, "J"),
						new Beat(89240, "L"),
						new Beat(89670, "S"),
						new Beat(89820, "S"),
						new Beat(89980, "K"),
						new Beat(90130, "D"),
						new Beat(90300, "F"),
						new Beat(90420, "J"),
						new Beat(90600, "Space"),
						new Beat(90800, "J"),
						new Beat(90980, "J"),
						new Beat(91090, "F"),
						new Beat(91200, "D"),
						new Beat(91350, "K"),
						new Beat(91570, "S"),
						new Beat(91720, "K"),
						new Beat(91850, "D"),
						new Beat(91950, "L"),
						new Beat(92080, "F"),
						new Beat(92150, "K"),
						new Beat(92400, "Space"),
						new Beat(92550, "J"),
						new Beat(92830, "D"),
						new Beat(93170, "K"),
						new Beat(93310, "S"),
						new Beat(93540, "K"),
						new Beat(93730, "D"),
						new Beat(93910, "K"),
						new Beat(94080, "F"),
						new Beat(94210, "L"),
						new Beat(94350, "S"),
						new Beat(94390, "K"),
						new Beat(94530, "D"),
						new Beat(94640, "K"),
						new Beat(94810, "F"),
						new Beat(94890, "K"),
						new Beat(95030, "F"),
						new Beat(95100, "K"),
						new Beat(95210, "F"),
						new Beat(95260, "K"),
						new Beat(95420, "D"),
						new Beat(95730, "J"),
						new Beat(96110, "S"),
						new Beat(96300, "D"),
						new Beat(96520, "F"),
						new Beat(96900, "Space"),
						new Beat(97080, "J"),
						new Beat(97300, "F"),
						new Beat(97740, "Space"),
						new Beat(97970, "J"),
						new Beat(98380, "J"),
						new Beat(98550, "J"),
						new Beat(98700, "K"),
						new Beat(98920, "L"),
						new Beat(99220, "K"),
						new Beat(99490, "D"),
						new Beat(99710, "S"),
						new Beat(99900, "K"),
						new Beat(100110, "D"),
						new Beat(100340, "L"),
						new Beat(100520, "S"),
						new Beat(100550, "L"),
						new Beat(100850, "K"),
						new Beat(101330, "J"),
						new Beat(101620, "Space"),
						new Beat(101990, "J"),
						new Beat(102480, "D"),
						new Beat(102870, "K"),
						new Beat(103270, "L"),
						new Beat(103300, "S"),
						new Beat(103680, "K"),
						new Beat(103720, "D"),
						new Beat(104110, "F"),
						new Beat(104140, "J"),
						new Beat(104460, "Space"),
						new Beat(104910, "F"),
						new Beat(104960, "J"),
						new Beat(105330, "K"),
						new Beat(105370, "D"),
						new Beat(105700, "L"),
						new Beat(105730, "S"),
						new Beat(106070, "K"),
						new Beat(106110, "D"),
						new Beat(106500, "D"),
						new Beat(106540, "K"),
						new Beat(106910, "J"),
						new Beat(107090, "F"),
						new Beat(107380, "D"),
						new Beat(107410, "J"),
						new Beat(107730, "S"),
						new Beat(107810, "J"),
						new Beat(108160, "F"),
						new Beat(108190, "J"),
						new Beat(108510, "D"),
						new Beat(108550, "J"),
						new Beat(108870, "Space"),
						new Beat(108910, "J"),
						new Beat(109310, "F"),
						new Beat(109340, "K"),
						new Beat(109700, "L"),
						new Beat(109730, "D"),
						new Beat(110040, "S"),
						new Beat(110080, "K"),
						new Beat(110480, "D"),
						new Beat(110510, "J"),
						new Beat(110890, "F"),
						new Beat(110930, "J"),
						new Beat(111320, "Space"),
						new Beat(111360, "J"),
						new Beat(111720, "F"),
						new Beat(111730, "J"),
						new Beat(112120, "D"),
						new Beat(112120, "K"),
						new Beat(112420, "L"),
						new Beat(112450, "S"),
						new Beat(112830, "K"),
						new Beat(112870, "D"),
						new Beat(113010, "D"),
						new Beat(113050, "K"),
						new Beat(113230, "J"),
						new Beat(113270, "F"),
						new Beat(113670, "Space"),
						new Beat(113700, "J"),
						new Beat(114090, "F"),
						new Beat(114130, "K"),
						new Beat(114520, "L"),
						new Beat(114550, "D"),
						new Beat(114880, "K"),
						new Beat(114910, "S"),
						new Beat(115290, "L"),
						new Beat(115320, "D"),
						new Beat(115940, "K"),
						new Beat(115980, "F"),
						new Beat(116740, "J"),
						new Beat(116740, "Space"),
						new Beat(117250, "Space"),
						new Beat(117280, "Space"),
						new Beat(117670, "L"),
						new Beat(117700, "Space"),
						new Beat(117750, "S"),
						new Beat(118260, "S"),
						new Beat(118290, "S"),
						new Beat(118320, "S"),
						new Beat(118350, "S"),
						new Beat(118380, "S"),
						new Beat(118410, "S"),
						new Beat(118450, "S"),
						new Beat(118480, "S"),
						new Beat(118520, "S"),
						new Beat(118550, "S"),
						new Beat(118580, "S"),
						new Beat(118620, "S"),
						new Beat(118650, "S"),
						new Beat(118680, "S"),
						new Beat(118710, "S"),
						new Beat(118740, "S"),
				};
			}

			else if(titleName.equals("Night madness")) {
				beats = new Beat[] {
						new Beat(1860, "Space"),
						new Beat(2590, "Space"),
						new Beat(3150, "Space"),
						new Beat(4840, "Space"),
						new Beat(5480, "Space"),
						new Beat(5990, "Space"),
						new Beat(7840, "Space"),
						new Beat(8460, "Space"),
						new Beat(8970, "Space"),
						new Beat(10800, "L"),
						new Beat(10840, "S"),
						new Beat(11230, "D"),
						new Beat(11280, "K"),
						new Beat(11620, "F"),
						new Beat(11650, "J"),
						new Beat(12900, "F"),
						new Beat(13160, "J"),
						new Beat(13940, "D"),
						new Beat(15750, "S"),
						new Beat(16130, "K"),
						new Beat(16890, "D"),
						new Beat(17070, "J"),
						new Beat(17250, "F"),
						new Beat(17460, "K"),
						new Beat(17640, "D"),
						new Beat(18400, "J"),
						new Beat(19180, "F"),
						new Beat(19900, "K"),
						new Beat(20730, "D"),
						new Beat(21390, "S"),
						new Beat(22160, "F"),
						new Beat(22910, "J"),
						new Beat(23590, "L"),
						new Beat(24370, "D"),
						new Beat(25110, "K"),
						new Beat(25910, "Space"),
						new Beat(26680, "Space"),
						new Beat(27430, "Space"),
						new Beat(28150, "Space"),
						new Beat(28920, "Space"),
						new Beat(29740, "Space"),
						new Beat(30460, "Space"),
						new Beat(31170, "Space"),
						new Beat(31870, "S"),
						new Beat(32220, "J"),
						new Beat(32600, "D"),
						new Beat(32990, "K"),
						new Beat(33180, "F"),
						new Beat(33380, "L"),
						new Beat(33560, "D"),
						new Beat(33740, "K"),
						new Beat(33920, "F"),
						new Beat(34060, "L"),
						new Beat(34490, "S"),
						new Beat(34880, "J"),
						new Beat(35230, "D"),
						new Beat(35590, "K"),
						new Beat(35980, "F"),
						new Beat(36170, "L"),
						new Beat(36360, "D"),
						new Beat(36510, "K"),
						new Beat(36680, "F"),
						new Beat(36860, "K"),
						new Beat(37040, "F"),
						new Beat(37500, "Space"),
						new Beat(38230, "Space"),
						new Beat(39000, "Space"),
						new Beat(39750, "Space"),
						new Beat(40510, "Space"),
						new Beat(41250, "S"),
						new Beat(42010, "Space"),
						new Beat(42710, "F"),
						new Beat(43490, "Space"),
						new Beat(43940, "J"),
						new Beat(44210, "D"),
						new Beat(44630, "K"),
						new Beat(44990, "S"),
						new Beat(45370, "J"),
						new Beat(45790, "F"),
						new Beat(46170, "Space"),
						new Beat(46510, "Space"),
						new Beat(46890, "D"),
						new Beat(47220, "J"),
						new Beat(47630, "Space"),
						new Beat(48000, "Space"),
						new Beat(48380, "D"),
						new Beat(48710, "J"),
						new Beat(49120, "Space"),
						new Beat(49470, "Space"),
						new Beat(49930, "F"),
						new Beat(50200, "K"),
						new Beat(50570, "Space"),
						new Beat(51000, "Space"),
						new Beat(51400, "F"),
						new Beat(51690, "K"),
						new Beat(52080, "Space"),
						new Beat(52460, "Space"),
						new Beat(52910, "J"),
						new Beat(53210, "D"),
						new Beat(53570, "Space"),
						new Beat(53960, "Space"),
						new Beat(54360, "J"),
						new Beat(54720, "D"),
						new Beat(55080, "Space"),
						new Beat(55440, "Space"),
						new Beat(55820, "J"),
						new Beat(56210, "D"),
						new Beat(56570, "Space"),
						new Beat(56910, "Space"),
						new Beat(57320, "J"),
						new Beat(57720, "F"),
						new Beat(58090, "Space"),
						new Beat(58500, "Space"),
						new Beat(58890, "K"),
						new Beat(59250, "D"),
						new Beat(59630, "Space"),
						new Beat(60000, "Space"),
						new Beat(60370, "L"),
						new Beat(60760, "S"),
						new Beat(61160, "Space"),
						new Beat(61560, "Space"),
						new Beat(61880, "K"),
						new Beat(62200, "D"),
						new Beat(62610, "Space"),
						new Beat(62990, "Space"),
						new Beat(63370, "J"),
						new Beat(63620, "D"),
						new Beat(64080, "Space"),
						new Beat(64470, "Space"),
						new Beat(64850, "F"),
						new Beat(65170, "J"),
						new Beat(65570, "Space"),
						new Beat(65950, "Space"),
						new Beat(66330, "S"),
						new Beat(66360, "L"),
						new Beat(66730, "L"),
						new Beat(66770, "S"),
						new Beat(67110, "Space"),
						new Beat(67500, "Space"),
						new Beat(67900, "D"),
						new Beat(67930, "K"),
						new Beat(68240, "K"),
						new Beat(68280, "D"),
						new Beat(68640, "Space"),
						new Beat(69000, "Space"),
						new Beat(69340, "F"),
						new Beat(69380, "J"),
						new Beat(69730, "J"),
						new Beat(69760, "F"),
						new Beat(70120, "Space"),
						new Beat(70470, "Space"),
						new Beat(70880, "F"),
						new Beat(70910, "J"),
						new Beat(71250, "F"),
						new Beat(71250, "J"),
						new Beat(71640, "D"),
						new Beat(71680, "K"),
						new Beat(71950, "D"),
						new Beat(71990, "K"),
						new Beat(72380, "S"),
						new Beat(72380, "L"),
						new Beat(72740, "L"),
						new Beat(72760, "S"),
						new Beat(73130, "Space"),
						new Beat(73500, "Space"),
						new Beat(73890, "L"),
						new Beat(73920, "S"),
						new Beat(74240, "S"),
						new Beat(74240, "L"),
						new Beat(74630, "K"),
						new Beat(74670, "D"),
						new Beat(74970, "K"),
						new Beat(75000, "D"),
						new Beat(75310, "J"),
						new Beat(75360, "F"),
						new Beat(75680, "F"),
						new Beat(75720, "J"),
						new Beat(76080, "Space"),
						new Beat(76460, "Space"),
						new Beat(76880, "Space"),
						new Beat(77520, "S"),
						new Beat(77660, "F"),
						new Beat(78180, "J"),
						new Beat(78370, "L"),
						new Beat(78570, "D"),
						new Beat(78790, "K"),
						new Beat(78970, "F"),
						new Beat(79180, "J"),
						new Beat(80020, "S"),
						new Beat(80440, "L"),
						new Beat(80620, "F"),
						new Beat(81090, "K"),
						new Beat(81290, "D"),
						new Beat(81440, "J"),
						new Beat(81510, "F"),
						new Beat(81620, "J"),
						new Beat(81710, "F"),
						new Beat(81780, "J"),
						new Beat(82050, "F"),
						new Beat(82780, "Space"),
						new Beat(83340, "J"),
						new Beat(83550, "J"),
						new Beat(84020, "D"),
						new Beat(84170, "K"),
						new Beat(84350, "F"),
						new Beat(84720, "S"),
						new Beat(84910, "S"),
						new Beat(85060, "F"),
						new Beat(85750, "D"),
						new Beat(86200, "J"),
						new Beat(86390, "J"),
						new Beat(86540, "F"),
						new Beat(86650, "K"),
						new Beat(87000, "D"),
						new Beat(87250, "F"),
						new Beat(87440, "J"),
						new Beat(87820, "F"),
						new Beat(88080, "J"),
						new Beat(88270, "J"),
						new Beat(88460, "F"),
						new Beat(88600, "J"),
						new Beat(88880, "S"),
						new Beat(88990, "F"),
						new Beat(89220, "J"),
						new Beat(89400, "L"),
						new Beat(89580, "D"),
				};
			}


		int i = 0;

		while(true) {
			if(beats[i].getTime() <= gameMusic.getTime()) {
				Note note = new Note(beats[i].getNoteName());
				note.start();
				noteList.add(note);
				i++;
			}
		}
	}

	public void judge(String input) {
		for (int i = 0; i < noteList.size() ; i++) {
			Note note = noteList.get(i);
			if(input.equals(note.getNoteType())) {
				judgeEvent(note.judge());
				break;
			}
		}
	}

	public void judgeEvent(String judge) {
		if(judge.equals("none") || judge.equals("Miss") || judge.equals("Late") || judge.equals("Early")) 
			blueFlareImage = null;

		if(judge.equals("Miss")) {
			if(combo > maxcombo) maxcombo = combo;
			combo = 0;
			score = (int) (score / 100) * 94;
			judgeImage =  new ImageIcon(Main.class.getResource("../images/MISS.png")).getImage();
		}

		else if(judge.equals("Early")) {
			combo = combo + 1;
			score = (int) (score / 100) * 98;
			judgeImage =  new ImageIcon(Main.class.getResource("../images/EARLY.png")).getImage();
		}

		else if(judge.equals("Good")) {
			combo = combo + 1;
			score = score + 30000;
			judgeImage =  new ImageIcon(Main.class.getResource("../images/GOOD.png")).getImage();
			blueFlareImage = new ImageIcon(Main.class.getResource("../images/blueflare.png")).getImage();
		}

		else if(judge.equals("Perfect")) {
			combo = combo + 1;
			score = score + 100000;
			judgeImage =  new ImageIcon(Main.class.getResource("../images/PERFECT.png")).getImage();
			blueFlareImage = new ImageIcon(Main.class.getResource("../images/blueflare.png")).getImage();
		}

		else if(judge.equals("Late")) {
			if(combo > maxcombo) maxcombo = combo;
			combo = 0;
			score = score + 3000;
			judgeImage =  new ImageIcon(Main.class.getResource("../images/LATE.png")).getImage();
		}

		else if(judge.equals("Great")) {
			combo = combo + 1;
			score = score + 60000;
			judgeImage =  new ImageIcon(Main.class.getResource("../images/GREAT.png")).getImage();
			blueFlareImage = new ImageIcon(Main.class.getResource("../images/blueflare.png")).getImage();
		}	
	}
}

